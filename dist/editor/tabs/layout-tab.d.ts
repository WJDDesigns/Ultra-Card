import { LitElement, TemplateResult } from 'lit';
import { HomeAssistant } from 'custom-card-helpers';
import { UltraCardConfig } from '../../types';
import '../../components/ultra-color-picker';
import '../global-design-tab';
export declare class LayoutTab extends LitElement {
    hass: HomeAssistant;
    config: UltraCardConfig;
    isFullScreen: boolean;
    private _showModuleSelector;
    private _selectedRowIndex;
    private _selectedColumnIndex;
    private _showModuleSettings;
    private _selectedModule;
    private _activeModuleTab;
    private _activeDesignSubtab;
    private _previewCollapsed;
    /** Inject module CSS once so animations render inside this tab's shadow DOM */
    private _moduleStylesInjected;
    private _showRowSettings;
    private _selectedRowForSettings;
    private _activeRowTab;
    private _showColumnSettings;
    private _selectedColumnForSettings;
    private _activeColumnTab;
    private _showColumnLayoutSelector;
    private _selectedRowForLayout;
    private _draggedItem;
    private _dropTarget;
    private _selectedLayoutModuleIndex;
    private _showLayoutChildSettings;
    private _selectedLayoutChild;
    private _templateUpdateListener;
    private _collapsedRows;
    private _collapsedColumns;
    private _collapsedLayoutModules;
    private _isDragging;
    private _isResizing;
    private _dragOffset;
    private _popupElement;
    private _boundDragStart;
    private _boundDragMove;
    private _boundDragEnd;
    private _createColumnIconHTML;
    private _createSimpleIcon;
    private readonly COLUMN_LAYOUTS;
    connectedCallback(): void;
    disconnectedCallback(): void;
    /** Inject combined CSS from all modules into this component's shadow root */
    private _injectModuleStyles;
    private _setupPopupDragHandlers;
    private _onPopupDragStart;
    private _onPopupDragMove;
    private _onPopupDragEnd;
    private _cleanupDragListeners;
    private _setupPopupRef;
    private _getLayoutsForColumnCount;
    private _getDefaultLayoutForColumnCount;
    private _getGridTemplateColumns;
    private _migrateLegacyLayoutId;
    private _ensureLayout;
    private _migrateLayoutNames;
    private _updateConfig;
    private _updateLayout;
    private _toggleRowCollapse;
    private _toggleColumnCollapse;
    private _isRowCollapsed;
    private _isColumnCollapsed;
    private _toggleLayoutModuleCollapse;
    private _isLayoutModuleCollapsed;
    private _saveCollapseState;
    private _loadCollapseState;
    private _addRow;
    private _deleteRow;
    private _duplicateRow;
    private _addColumn;
    private _addColumnAfter;
    private _duplicateColumn;
    private _deleteColumn;
    private _openColumnLayoutSelector;
    private _changeColumnLayout;
    private _getCurrentLayoutDisplay;
    private _openModuleSelector;
    private _addModule;
    private _duplicateModule;
    private _deleteModule;
    private _openModuleSettings;
    private _updateModule;
    private _updateLayoutChildModule;
    private _updateModuleDesign;
    private _closeModuleSettings;
    private _closeLayoutChildSettings;
    private _onDragStart;
    private _onDragEnd;
    private _onDragOver;
    private _onDragEnter;
    private _onDragLeave;
    private _onDrop;
    private _isValidDropTarget;
    private _performMove;
    private _moveModule;
    private _moveColumn;
    private _moveRow;
    private _openRowSettings;
    private _updateRow;
    private _openColumnSettings;
    private _updateColumn;
    private _loadGoogleFont;
    private _renderModulePreview;
    private _renderSingleModule;
    private _renderSimplifiedModule;
    private _renderLayoutModuleAsColumn;
    private _getJustifyContent;
    private _renderLayoutChildModule;
    private _onLayoutModuleDragOver;
    private _onLayoutModuleDragEnter;
    private _onLayoutModuleDragLeave;
    private _onLayoutModuleDrop;
    private _onLayoutChildDragStart;
    private _onLayoutChildDragEnd;
    private _onLayoutChildDragEnter;
    private _onLayoutChildDrop;
    private _onLayoutAppendDragEnter;
    private _onLayoutAppendDrop;
    private _openLayoutModuleSelector;
    private _openLayoutChildSettings;
    private _duplicateLayoutChildModule;
    private _deleteLayoutChildModule;
    private _getModuleDisplayName;
    private _getRowDisplayName;
    private _getColumnDisplayName;
    private _generateModuleInfo;
    private _renderSingleModuleWithAnimation;
    private _getPreviewAnimationData;
    private _getRowPreviewAnimationData;
    private _getColumnPreviewAnimationData;
    private _renderRowPreview;
    private _renderColumnPreview;
    private _renderModuleSettings;
    private _renderLayoutChildSettings;
    private _renderLayoutChildGeneralTab;
    private _renderLayoutChildActionsTab;
    private _renderLayoutChildOtherTab;
    private _renderLayoutChildLogicTab;
    private _renderLayoutChildDesignTab;
    private _renderRowSettings;
    private _renderColumnSettings;
    private _renderRowGeneralTab;
    private _renderRowLogicTab;
    private _renderRowDesignTab;
    private _renderColumnGeneralTab;
    private _renderColumnLogicTab;
    private _renderColumnDesignTab;
    private _renderGeneralTab;
    private _renderActionsTab;
    private _renderOtherTab;
    private _addCondition;
    private _addRowCondition;
    private _addColumnCondition;
    private _removeCondition;
    private _updateCondition;
    private _duplicateCondition;
    private _renderRowCondition;
    private _renderColumnCondition;
    private _renderConditionGeneric;
    private _renderEntityConditionGeneric;
    private _renderEntityAttributeConditionGeneric;
    private _renderCondition;
    private _renderEntityCondition;
    private _renderEntityAttributeCondition;
    private _renderTimeCondition;
    private _renderTemplateCondition;
    private _renderLogicTab;
    private _renderDesignTab;
    private _renderTextDesignTab;
    private _renderBackgroundDesignTab;
    private _renderSpacingDesignTab;
    protected firstUpdated(changedProperties: Map<string, any>): void;
    protected updated(changedProperties: Map<string, any>): void;
    private _renderBorderDesignTab;
    protected render(): TemplateResult;
    private _renderModuleSelector;
    private _formatCategoryTitle;
    private _isLayoutModule;
    private _shouldAutoOpenSettings;
    private _getLayoutModuleColor;
    private _renderColumnLayoutSelector;
    static get styles(): import("lit").CSSResult;
}
