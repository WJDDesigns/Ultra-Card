import { HomeAssistant } from 'custom-card-helpers';
import { LinkAction } from './services/link-service';
declare global {
    interface Window {
        _ultraCardUpdateTimer?: ReturnType<typeof setTimeout> | null;
    }
}
export type ActionType = 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
export interface ModuleActionConfig {
    action: ActionType;
    entity?: string;
    navigation_path?: string;
    url_path?: string;
    service?: string;
    perform_action?: string;
    service_data?: Record<string, any>;
    target?: {
        entity_id?: string | string[];
        device_id?: string | string[];
        area_id?: string | string[];
    };
    data?: Record<string, any>;
}
export interface DisplayCondition {
    id: string;
    type: 'entity_state' | 'entity_attribute' | 'template' | 'time';
    entity?: string;
    attribute?: string;
    operator?: '=' | '!=' | '>' | '>=' | '<' | '<=' | 'has_value' | 'no_value' | 'contains' | 'not_contains';
    value?: string | number;
    template?: string;
    time_from?: string;
    time_to?: string;
    enabled?: boolean;
}
export interface BaseModule {
    id: string;
    type: 'image' | 'info' | 'bar' | 'icon' | 'text' | 'separator' | 'horizontal' | 'vertical' | 'slider' | 'pagebreak' | 'button' | 'markdown' | 'camera' | 'graphs' | 'dropdown' | 'light' | 'gauge' | 'spinbox' | 'animated_clock' | 'animated_weather' | 'animated_forecast' | 'external_card';
    name?: string;
    display_mode?: 'always' | 'every' | 'any';
    display_conditions?: DisplayCondition[];
    smart_scaling?: boolean;
    background_color?: string;
    background_image?: string;
    background_image_type?: 'none' | 'upload' | 'entity' | 'url';
    background_image_entity?: string;
    background_size?: 'cover' | 'contain' | 'auto' | string;
    background_position?: 'left top' | 'left center' | 'left bottom' | 'center top' | 'center center' | 'center bottom' | 'right top' | 'right center' | 'right bottom' | string;
    background_repeat?: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';
    margin?: {
        top?: number;
        bottom?: number;
        left?: number;
        right?: number;
    };
    padding?: {
        top?: number;
        bottom?: number;
        left?: number;
        right?: number;
    };
    border?: {
        style?: 'none' | 'solid' | 'dashed' | 'dotted';
        width?: number;
        color?: string;
        radius?: number;
    };
    custom_css?: string;
    intro_animation?: 'none' | 'fadeIn' | 'slideInUp' | 'slideInDown' | 'slideInLeft' | 'slideInRight' | 'zoomIn' | 'bounceIn' | 'flipInX' | 'flipInY' | 'rotateIn';
    outro_animation?: 'none' | 'fadeOut' | 'slideOutUp' | 'slideOutDown' | 'slideOutLeft' | 'slideOutRight' | 'zoomOut' | 'bounceOut' | 'flipOutX' | 'flipOutY' | 'rotateOut';
    animation_duration?: string;
    animation_delay?: string;
    animation_timing?: 'ease' | 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'cubic-bezier(0.25,0.1,0.25,1)';
    design?: SharedDesignProperties;
}
export interface TextModule extends BaseModule {
    type: 'text';
    text: string;
    link?: string;
    hide_if_no_link?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    icon?: string;
    icon_color?: string;
    icon_position?: 'before' | 'after' | 'none';
    font_size?: number;
    font_family?: string;
    color?: string;
    alignment?: 'left' | 'center' | 'right' | 'justify';
    bold?: boolean;
    italic?: boolean;
    underline?: boolean;
    uppercase?: boolean;
    strikethrough?: boolean;
    font_weight?: string;
    line_height?: number;
    letter_spacing?: string;
    text_transform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize';
    font_style?: 'normal' | 'italic' | 'oblique';
    template_mode?: boolean;
    template?: string;
    enable_hover_effect?: boolean;
    hover_background_color?: string;
    hover_effect?: 'none' | 'color' | 'scale' | 'glow' | 'lift';
    hover_glow_color?: string;
}
export interface SeparatorModule extends BaseModule {
    type: 'separator';
    separator_style?: 'line' | 'double_line' | 'dotted' | 'double_dotted' | 'shadow' | 'blank';
    orientation?: 'horizontal' | 'vertical';
    thickness?: number;
    width_percent?: number;
    height_px?: number;
    color?: string;
    show_title?: boolean;
    title?: string;
    title_size?: number;
    title_color?: string;
    title_bold?: boolean;
    title_italic?: boolean;
    title_uppercase?: boolean;
    title_strikethrough?: boolean;
    title_underline?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface ImageModule extends BaseModule {
    type: 'image';
    image_type?: 'upload' | 'url' | 'entity' | 'attribute' | 'none' | 'default';
    image?: string;
    image_entity?: string;
    image_width?: number;
    image_height?: number;
    image_fit?: 'cover' | 'contain' | 'fill' | 'none';
    single_click_action?: 'none' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'service';
    single_entity?: string;
    single_navigation_path?: string;
    single_url?: string;
    single_service?: string;
    single_service_data?: Record<string, any>;
    image_url?: string;
    entity?: string;
    image_attribute?: string;
    width?: number | string;
    height?: number | string;
    aspect_ratio?: 'auto' | '1/1' | '4/3' | '3/2' | '16/9' | '21/9' | '2/3' | '9/16';
    object_fit?: 'cover' | 'contain' | 'fill' | 'scale-down' | 'none';
    border_radius?: number;
    border_width?: number;
    border_color?: string;
    box_shadow?: string;
    link_enabled?: boolean;
    link_url?: string;
    link_target?: '_self' | '_blank';
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    alignment?: 'left' | 'center' | 'right';
    filter_blur?: number;
    filter_brightness?: number;
    filter_contrast?: number;
    filter_saturate?: number;
    filter_hue_rotate?: number;
    filter_opacity?: number;
    rotation?: number;
    hover_enabled?: boolean;
    hover_effect?: 'scale' | 'rotate' | 'fade' | 'blur' | 'brightness' | 'glow' | 'slide';
    hover_scale?: number;
    hover_rotate?: number;
    hover_opacity?: number;
    hover_blur?: number;
    hover_brightness?: number;
    hover_shadow?: string;
    hover_translate_x?: number;
    hover_translate_y?: number;
    hover_transition?: number;
    template_mode?: boolean;
    template?: string;
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface InfoEntityConfig {
    id: string;
    entity: string;
    name?: string;
    icon?: string;
    show_icon?: boolean;
    show_name?: boolean;
    show_state?: boolean;
    show_units?: boolean;
    text_size?: number;
    name_size?: number;
    icon_size?: number;
    text_bold?: boolean;
    text_italic?: boolean;
    text_uppercase?: boolean;
    text_strikethrough?: boolean;
    name_bold?: boolean;
    name_italic?: boolean;
    name_uppercase?: boolean;
    name_strikethrough?: boolean;
    icon_color?: string;
    name_color?: string;
    text_color?: string;
    state_color?: string;
    click_action?: 'none' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'service';
    navigation_path?: string;
    url?: string;
    service?: string;
    service_data?: Record<string, any>;
    template_mode?: boolean;
    template?: string;
    dynamic_icon_template_mode?: boolean;
    dynamic_icon_template?: string;
    dynamic_color_template_mode?: boolean;
    dynamic_color_template?: string;
    icon_position?: 'left' | 'right' | 'top' | 'bottom';
    icon_alignment?: 'start' | 'center' | 'end';
    content_alignment?: 'start' | 'center' | 'end';
    overall_alignment?: 'left' | 'center' | 'right';
    icon_gap?: number;
    name_value_layout?: 'vertical' | 'horizontal';
    name_value_gap?: number;
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface InfoModule extends BaseModule {
    type: 'info';
    info_entities: InfoEntityConfig[];
    alignment?: 'left' | 'center' | 'right' | 'space-between' | 'space-around';
    vertical_alignment?: 'top' | 'center' | 'bottom';
    columns?: number;
    gap?: number;
    allow_wrap?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface BarModule extends BaseModule {
    type: 'bar';
    entity: string;
    name?: string;
    percentage_type?: 'entity' | 'attribute' | 'difference' | 'template';
    percentage_entity?: string;
    percentage_attribute_entity?: string;
    percentage_attribute_name?: string;
    percentage_current_entity?: string;
    percentage_total_entity?: string;
    percentage_template?: string;
    bar_direction?: 'left-to-right' | 'right-to-left';
    bar_size?: 'extra-thick' | 'thick' | 'medium' | 'thin';
    bar_radius?: 'square' | 'round' | 'pill';
    bar_style?: 'flat' | 'glossy' | 'embossed' | 'inset' | 'gradient-overlay' | 'neon-glow' | 'outline' | 'glass' | 'metallic' | 'neumorphic' | 'dashed' | 'dots' | 'minimal';
    bar_width?: number;
    bar_alignment?: 'left' | 'center' | 'right';
    height?: number;
    border_radius?: number;
    label_alignment?: 'left' | 'center' | 'right' | 'space-between';
    show_percentage?: boolean;
    percentage_text_size?: number;
    percentage_text_alignment?: 'left' | 'center' | 'right';
    show_value?: boolean;
    value_position?: 'inside' | 'outside' | 'none';
    left_enabled?: boolean;
    left_title?: string;
    left_entity?: string;
    left_condition_type?: 'none' | 'entity' | 'template';
    left_condition_entity?: string;
    left_condition_state?: string;
    left_template_mode?: boolean;
    left_template?: string;
    left_title_size?: number;
    left_value_size?: number;
    left_title_color?: string;
    left_value_color?: string;
    right_enabled?: boolean;
    right_title?: string;
    right_entity?: string;
    right_condition_type?: 'none' | 'entity' | 'template';
    right_condition_entity?: string;
    right_condition_state?: string;
    right_template_mode?: boolean;
    right_template?: string;
    right_title_size?: number;
    right_value_size?: number;
    right_title_color?: string;
    right_value_color?: string;
    bar_color?: string;
    bar_background_color?: string;
    bar_border_color?: string;
    percentage_text_color?: string;
    dot_color?: string;
    use_gradient?: boolean;
    gradient_display_mode?: 'full' | 'cropped' | 'value-based';
    gradient_stops?: Array<{
        id: string;
        position: number;
        color: string;
    }>;
    limit_entity?: string;
    limit_color?: string;
    animation?: boolean;
    template_mode?: boolean;
    template?: string;
    bar_animation_enabled?: boolean;
    bar_animation_entity?: string;
    bar_animation_trigger_type?: 'state' | 'attribute';
    bar_animation_attribute?: string;
    bar_animation_value?: string;
    bar_animation_type?: 'none' | 'charging' | 'pulse' | 'blinking' | 'bouncing' | 'glow' | 'rainbow' | 'bubbles' | 'fill' | 'ripple' | 'traffic' | 'traffic_flow' | 'heartbeat' | 'flicker' | 'shimmer' | 'vibrate';
    bar_animation_override_entity?: string;
    bar_animation_override_trigger_type?: 'state' | 'attribute';
    bar_animation_override_attribute?: string;
    bar_animation_override_value?: string;
    bar_animation_override_type?: 'none' | 'charging' | 'pulse' | 'blinking' | 'bouncing' | 'glow' | 'rainbow' | 'bubbles' | 'fill' | 'ripple' | 'traffic' | 'traffic_flow' | 'heartbeat' | 'flicker' | 'shimmer' | 'vibrate';
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface GaugeModule extends BaseModule {
    type: 'gauge';
    entity: string;
    name?: string;
    value_type?: 'entity' | 'attribute' | 'template';
    value_entity?: string;
    value_attribute_entity?: string;
    value_attribute_name?: string;
    value_template?: string;
    min_value?: number;
    max_value?: number;
    gauge_style?: 'basic' | 'speedometer' | 'block' | 'lines' | 'modern' | 'inset' | '3d' | 'neon' | 'digital' | 'minimal' | 'arc' | 'radial';
    gauge_size?: number;
    gauge_thickness?: number;
    pointer_enabled?: boolean;
    pointer_style?: 'triangle' | 'line' | 'needle' | 'arrow' | 'circle' | 'highlight' | 'cap' | 'custom';
    pointer_color?: string;
    pointer_length?: number;
    pointer_width?: number;
    gauge_color_mode?: 'solid' | 'gradient' | 'segments';
    gauge_color?: string;
    gauge_background_color?: string;
    use_gradient?: boolean;
    gradient_display_mode?: 'full' | 'cropped' | 'value-based';
    gradient_stops?: Array<{
        id: string;
        position: number;
        color: string;
    }>;
    use_segments?: boolean;
    segments?: Array<{
        id: string;
        from: number;
        to: number;
        color: string;
        label?: string;
    }>;
    show_value?: boolean;
    value_position?: 'center' | 'top' | 'bottom' | 'none';
    value_font_size?: number;
    value_color?: string;
    value_format?: string;
    value_x_offset?: number;
    value_y_offset?: number;
    value_bold?: boolean;
    value_italic?: boolean;
    value_underline?: boolean;
    value_uppercase?: boolean;
    value_strikethrough?: boolean;
    show_name?: boolean;
    name_position?: 'top' | 'bottom' | 'center' | 'none';
    name_font_size?: number;
    name_color?: string;
    name_x_offset?: number;
    name_y_offset?: number;
    name_bold?: boolean;
    name_italic?: boolean;
    name_underline?: boolean;
    name_uppercase?: boolean;
    name_strikethrough?: boolean;
    show_min_max?: boolean;
    min_max_font_size?: number;
    min_max_color?: string;
    show_ticks?: boolean;
    tick_count?: number;
    tick_color?: string;
    show_tick_labels?: boolean;
    tick_label_font_size?: number;
    animation_enabled?: boolean;
    animation_duration?: string;
    animation_easing?: 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'bounce';
    zones?: Array<{
        id: string;
        from: number;
        to: number;
        color: string;
        opacity?: number;
    }>;
    template_mode?: boolean;
    template?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface IconConfig {
    id: string;
    entity: string;
    name?: string;
    icon_inactive?: string;
    icon_active?: string;
    inactive_state?: string;
    active_state?: string;
    inactive_attribute?: string;
    active_attribute?: string;
    custom_inactive_state_text?: string;
    custom_active_state_text?: string;
    custom_inactive_name_text?: string;
    custom_active_name_text?: string;
    inactive_template_mode?: boolean;
    inactive_template?: string;
    active_template_mode?: boolean;
    active_template?: string;
    use_entity_color_for_icon?: boolean;
    use_state_color_for_inactive_icon?: boolean;
    use_state_color_for_active_icon?: boolean;
    color_inactive?: string;
    color_active?: string;
    inactive_icon_color?: string;
    active_icon_color?: string;
    inactive_name_color?: string;
    active_name_color?: string;
    inactive_state_color?: string;
    active_state_color?: string;
    show_name_when_inactive?: boolean;
    show_state_when_inactive?: boolean;
    show_icon_when_inactive?: boolean;
    show_name_when_active?: boolean;
    show_state_when_active?: boolean;
    show_icon_when_active?: boolean;
    show_state?: boolean;
    show_name?: boolean;
    show_units?: boolean;
    enable_hover_effect?: boolean;
    icon_size?: number;
    text_size?: number;
    name_icon_gap?: number;
    name_state_gap?: number;
    icon_state_gap?: number;
    active_icon_size?: number;
    inactive_icon_size?: number;
    active_text_size?: number;
    inactive_text_size?: number;
    state_size?: number;
    active_state_size?: number;
    inactive_state_size?: number;
    icon_size_locked?: boolean;
    text_size_locked?: boolean;
    state_size_locked?: boolean;
    active_icon_locked?: boolean;
    active_icon_color_locked?: boolean;
    active_icon_background_locked?: boolean;
    active_icon_background_color_locked?: boolean;
    active_name_locked?: boolean;
    active_name_color_locked?: boolean;
    active_state_locked?: boolean;
    active_state_color_locked?: boolean;
    icon_background?: 'none' | 'rounded-square' | 'circle';
    use_entity_color_for_icon_background?: boolean;
    icon_background_color?: string;
    background_repeat?: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';
    background_position?: 'left top' | 'left center' | 'left bottom' | 'center top' | 'center center' | 'center bottom' | 'right top' | 'right center' | 'right bottom';
    background_size?: 'cover' | 'contain' | 'auto' | string;
    active_icon_background?: 'none' | 'rounded-square' | 'circle';
    inactive_icon_background?: 'none' | 'rounded-square' | 'circle';
    active_icon_background_color?: string;
    inactive_icon_background_color?: string;
    inactive_icon_animation?: 'none' | 'pulse' | 'spin' | 'bounce' | 'flash' | 'shake' | 'vibrate' | 'rotate-left' | 'rotate-right' | 'fade' | 'scale' | 'tada';
    active_icon_animation?: 'none' | 'pulse' | 'spin' | 'bounce' | 'flash' | 'shake' | 'vibrate' | 'rotate-left' | 'rotate-right' | 'fade' | 'scale' | 'tada';
    vertical_alignment?: 'top' | 'center' | 'bottom';
    container_width?: number;
    container_background_shape?: 'none' | 'rounded' | 'square' | 'circle';
    container_background_color?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    click_action?: 'none' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'service';
    double_click_action?: 'none' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'service';
    hold_action_legacy?: 'none' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'service';
    navigation_path?: string;
    url?: string;
    service?: string;
    service_data?: Record<string, any>;
    template_mode?: boolean;
    template?: string;
    dynamic_icon_template_mode?: boolean;
    dynamic_icon_template?: string;
    dynamic_color_template_mode?: boolean;
    dynamic_color_template?: string;
}
export interface IconModule extends BaseModule {
    type: 'icon';
    icons: IconConfig[];
    alignment?: 'left' | 'center' | 'right' | 'space-between' | 'space-around';
    vertical_alignment?: 'top' | 'center' | 'bottom';
    columns?: number;
    gap?: number;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface HorizontalModule extends BaseModule {
    type: 'horizontal';
    modules: CardModule[];
    alignment?: 'left' | 'center' | 'right' | 'space-between' | 'space-around' | 'justify';
    vertical_alignment?: 'top' | 'center' | 'bottom' | 'stretch' | 'baseline';
    gap?: number;
    wrap?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
}
export interface VerticalModule extends BaseModule {
    type: 'vertical';
    modules: CardModule[];
    alignment?: 'top' | 'center' | 'bottom' | 'space-between' | 'space-around';
    horizontal_alignment?: 'left' | 'center' | 'right' | 'stretch';
    gap?: number;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
}
export interface PageBreakModule extends BaseModule {
    type: 'pagebreak';
}
export interface SliderModule extends BaseModule {
    type: 'slider';
    modules: CardModule[];
    show_pagination?: boolean;
    pagination_style?: 'dots' | 'numbers' | 'thumbnails' | 'fraction' | 'progressbar';
    pagination_position?: 'top' | 'bottom' | 'left' | 'right';
    pagination_color?: string;
    pagination_active_color?: string;
    pagination_size?: number;
    show_arrows?: boolean;
    arrow_position?: 'inside' | 'outside';
    arrow_style?: 'default' | 'circle' | 'square' | 'minimal';
    arrow_size?: number;
    arrow_color?: string;
    arrow_background_color?: string;
    prev_arrow_icon?: string;
    next_arrow_icon?: string;
    arrows_always_visible?: boolean;
    transition_effect?: 'slide-left' | 'slide-right' | 'slide-top' | 'slide-bottom' | 'fade' | 'zoom-in' | 'zoom-out' | 'circle';
    transition_speed?: number;
    transition_easing?: 'linear' | 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out';
    auto_play?: boolean;
    auto_play_delay?: number;
    pause_on_hover?: boolean;
    loop?: boolean;
    allow_swipe?: boolean;
    allow_keyboard?: boolean;
    allow_mousewheel?: boolean;
    slider_height?: number;
    slider_width?: string;
    gap?: number;
    slides_per_view?: number;
    space_between?: number;
    vertical_alignment?: 'top' | 'center' | 'bottom' | 'stretch';
    mobile_slides_per_view?: number;
    mobile_space_between?: number;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
}
export interface ButtonModule extends BaseModule {
    type: 'button';
    label: string;
    action?: LinkAction;
    style?: 'flat' | 'glossy' | 'embossed' | 'inset' | 'gradient-overlay' | 'neon-glow' | 'outline' | 'glass' | 'metallic' | 'neumorphic' | 'dashed' | 'dots';
    alignment?: 'left' | 'center' | 'right' | 'justify';
    show_icon?: boolean;
    icon?: string;
    icon_position?: 'before' | 'after';
    background_color?: string;
    text_color?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface SpinboxModule extends BaseModule {
    type: 'spinbox';
    entity?: string;
    value?: number;
    min_value: number;
    max_value: number;
    step: number;
    unit?: string;
    show_unit?: boolean;
    layout?: 'horizontal' | 'vertical';
    show_value?: boolean;
    value_position?: 'center' | 'top' | 'bottom' | 'left' | 'right';
    button_style?: 'flat' | 'glossy' | 'embossed' | 'inset' | 'gradient-overlay' | 'neon-glow' | 'outline' | 'glass' | 'metallic';
    button_shape?: 'rounded' | 'square' | 'circle';
    button_size?: number;
    button_spacing?: number;
    button_gap?: number;
    increment_icon?: string;
    decrement_icon?: string;
    button_background_color?: string;
    button_text_color?: string;
    value_color?: string;
    value_font_size?: number;
    template_mode?: boolean;
    template?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
}
export interface MarkdownModule extends BaseModule {
    type: 'markdown';
    markdown_content: string;
    link?: string;
    hide_if_no_link?: boolean;
    template_mode?: boolean;
    template?: string;
    font_size?: number;
    font_family?: string;
    color?: string;
    alignment?: 'left' | 'center' | 'right' | 'justify';
    line_height?: number;
    letter_spacing?: string;
    enable_html?: boolean;
    enable_tables?: boolean;
    enable_code_highlighting?: boolean;
    max_height?: string;
    overflow_behavior?: 'scroll' | 'hidden' | 'visible';
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface CameraModule extends BaseModule {
    type: 'camera';
    entity: string;
    camera_name?: string;
    show_name?: boolean;
    name_position?: 'top-left' | 'top-middle' | 'top-right' | 'bottom-left' | 'bottom-middle' | 'bottom-right' | 'center';
    tap_opens_fullscreen?: boolean;
    width?: number;
    height?: number;
    aspect_ratio_linked?: boolean;
    aspect_ratio_value?: number;
    image_fit?: 'cover' | 'contain' | 'fill' | 'scale-down';
    border_radius?: string;
    crop_left?: number;
    crop_top?: number;
    crop_right?: number;
    crop_bottom?: number;
    show_controls?: boolean;
    auto_refresh?: boolean;
    refresh_interval?: number;
    image_quality?: 'high' | 'medium' | 'low';
    rotation?: number;
    live_view?: boolean;
    audio_enabled?: boolean;
    show_unavailable?: boolean;
    fallback_image?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    template_mode?: boolean;
    template?: string;
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface GraphEntityConfig {
    id: string;
    entity: string;
    name?: string;
    attribute?: string;
    forecast_attribute?: 'temperature' | 'precipitation' | 'wind_speed' | 'humidity' | 'pressure' | 'cloud_coverage' | string;
    color?: string;
    chart_type_override?: string;
    show_points?: boolean;
    fill_area?: boolean;
    line_width?: number;
    line_style?: 'solid' | 'dashed' | 'dotted';
    is_primary?: boolean;
    label_show_name?: boolean;
    label_show_value?: boolean;
}
export interface GraphsModule extends BaseModule {
    type: 'graphs';
    data_source?: 'history' | 'forecast';
    forecast_type?: 'hourly' | 'daily';
    forecast_entity?: string;
    chart_type: 'line' | 'bar' | 'area' | 'scatter' | 'bubble' | 'pie' | 'donut' | 'radar' | 'histogram' | 'heatmap' | 'waterfall' | 'combo';
    entities: GraphEntityConfig[];
    time_period: '1h' | '3h' | '6h' | '12h' | '24h' | '2d' | '7d' | '30d' | '90d' | '365d' | 'custom';
    custom_time_start?: string;
    custom_time_end?: string;
    show_title?: boolean;
    title?: string;
    title_size?: number;
    title_color?: string;
    chart_alignment?: 'left' | 'center' | 'right';
    show_legend?: boolean;
    normalize_values?: boolean;
    legend_position?: 'top_left' | 'top_right' | 'bottom_left' | 'bottom_right';
    show_grid?: boolean;
    show_grid_values?: boolean;
    grid_color?: string;
    background_color?: string;
    chart_width?: string;
    chart_height?: number;
    info_position?: 'top_left' | 'top_right' | 'bottom_left' | 'bottom_right' | 'middle';
    show_info_overlay?: boolean;
    show_display_name?: boolean;
    show_entity_value?: boolean;
    show_x_axis?: boolean;
    x_axis_label?: string;
    x_axis_color?: string;
    x_axis_grid?: boolean;
    show_y_axis?: boolean;
    y_axis_label?: string;
    y_axis_color?: string;
    y_axis_min?: number;
    y_axis_max?: number;
    y_axis_grid?: boolean;
    data_aggregation?: 'mean' | 'sum' | 'min' | 'max' | 'median' | 'first' | 'last' | 'count' | 'delta';
    data_points_limit?: number;
    smooth_curves?: boolean;
    enable_animation?: boolean;
    animation_duration?: string;
    enable_zoom?: boolean;
    enable_pan?: boolean;
    show_tooltips?: boolean;
    line_tension?: number;
    fill_opacity?: number;
    show_points?: boolean;
    point_radius?: number;
    bar_width?: number;
    bar_spacing?: number;
    stacked?: boolean;
    horizontal?: boolean;
    inner_radius?: number;
    start_angle?: number;
    show_percentages?: boolean;
    explode_slices?: boolean;
    slice_gap?: number;
    show_slice_labels?: boolean;
    point_size?: number;
    point_opacity?: number;
    show_regression?: boolean;
    bubble_scale?: number;
    scale_min?: number;
    scale_max?: number;
    grid_levels?: number;
    point_style?: 'circle' | 'triangle' | 'rect' | 'star';
    cell_padding?: number;
    color_scheme?: 'viridis' | 'plasma' | 'inferno' | 'magma' | 'blues' | 'reds' | 'greens' | 'greys';
    show_values?: boolean;
    value_format?: string;
    positive_color?: string;
    negative_color?: string;
    total_color?: string;
    connector_color?: string;
    primary_axis?: 'left' | 'right';
    secondary_axis?: 'left' | 'right' | 'none';
    sync_axes?: boolean;
    auto_refresh?: boolean;
    refresh_interval?: number;
    template_mode?: boolean;
    template?: string;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface DropdownModule extends BaseModule {
    type: 'dropdown';
    source_mode?: 'manual' | 'entity';
    source_entity?: string;
    placeholder?: string;
    options: DropdownOption[];
    entity_option_customization?: Record<string, {
        icon?: string;
        icon_color?: string;
        use_state_color?: boolean;
    }>;
    current_selection?: string;
    track_state?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface LightModule extends BaseModule {
    type: 'light';
    presets: Array<{
        id: string;
        name: string;
        icon?: string;
        entities: string[];
        brightness?: number;
        color_temp?: number;
        rgb_color?: number[];
        hs_color?: number[];
        xy_color?: number[];
        rgbw_color?: number[];
        rgbww_color?: number[];
        white?: number;
        effect?: string;
        effect_speed?: number;
        effect_intensity?: number;
        effect_reverse?: boolean;
        transition_time?: number;
        text_color?: string;
        icon_color?: string;
        button_color?: string;
        use_light_color_for_icon?: boolean;
        use_light_color_for_button?: boolean;
        use_icon_color_for_text?: boolean;
        smart_color?: boolean;
        button_style?: 'filled' | 'outlined' | 'text';
        show_label?: boolean;
        border_radius?: number;
    }>;
    layout?: 'buttons' | 'grid';
    button_alignment?: 'left' | 'center' | 'right' | 'space-between' | 'space-around' | 'space-evenly';
    allow_wrapping?: boolean;
    button_gap?: number;
    columns?: number;
    show_labels?: boolean;
    button_style?: 'filled' | 'outlined' | 'text';
    default_transition_time?: number;
    confirm_actions?: boolean;
    show_feedback?: boolean;
    tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    hold_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    double_tap_action?: {
        action: 'default' | 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        service_data?: Record<string, any>;
    };
    enable_hover_effect?: boolean;
    hover_background_color?: string;
}
export interface AnimatedClockModule extends BaseModule {
    type: 'animated_clock';
    time_format?: '12' | '24';
    clock_style?: 'flip' | 'digital' | 'analog' | 'binary' | 'minimal' | 'retro' | 'word' | 'neon' | 'material' | 'terminal';
    update_frequency?: '1' | '60';
    analog_show_seconds?: boolean;
    analog_smooth_seconds?: boolean;
    analog_show_hour_hand?: boolean;
    analog_show_minute_hand?: boolean;
    analog_show_hour_markers?: boolean;
    analog_show_center_dot?: boolean;
    analog_show_numbers?: boolean;
    analog_show_hour_ticks?: boolean;
    analog_show_minute_ticks?: boolean;
    analog_hour_hand_color?: string;
    analog_minute_hand_color?: string;
    analog_second_hand_color?: string;
    analog_hour_marker_color?: string;
    analog_center_dot_color?: string;
    analog_numbers_color?: string;
    analog_hour_ticks_color?: string;
    analog_minute_ticks_color?: string;
    analog_face_outline_color?: string;
    analog_face_background_color?: string;
    analog_face_background_type?: 'color' | 'entity' | 'upload' | 'url';
    analog_face_background_image_entity?: string;
    analog_face_background_image_upload?: string;
    analog_face_background_image_url?: string;
    analog_face_background_size?: string;
    analog_face_background_position?: string;
    analog_face_background_repeat?: string;
    show_hours?: boolean;
    show_minutes?: boolean;
    show_seconds?: boolean;
    show_ampm?: boolean;
    show_separators?: boolean;
    show_labels?: boolean;
    show_prefix?: boolean;
    show_prompt?: boolean;
    show_command?: boolean;
    show_cursor?: boolean;
    clock_size?: number;
    clock_color?: string;
    clock_background?: string;
    flip_tile_color?: string;
    flip_hours_color?: string;
    flip_minutes_color?: string;
    flip_separator_color?: string;
    flip_ampm_color?: string;
    digital_background_color?: string;
    digital_hours_color?: string;
    digital_minutes_color?: string;
    digital_seconds_color?: string;
    digital_separator_color?: string;
    digital_ampm_color?: string;
    digital_glow_color?: string;
    binary_hours_empty_color?: string;
    binary_hours_filled_color?: string;
    binary_minutes_empty_color?: string;
    binary_minutes_filled_color?: string;
    binary_seconds_empty_color?: string;
    binary_seconds_filled_color?: string;
    binary_separator_color?: string;
    binary_hours_label_color?: string;
    binary_minutes_label_color?: string;
    binary_seconds_label_color?: string;
    minimal_hours_color?: string;
    minimal_minutes_color?: string;
    minimal_seconds_color?: string;
    minimal_separator_color?: string;
    minimal_ampm_color?: string;
    retro_background_color?: string;
    retro_hours_tile_color?: string;
    retro_minutes_tile_color?: string;
    retro_seconds_tile_color?: string;
    retro_separator_tile_color?: string;
    retro_hours_color?: string;
    retro_minutes_color?: string;
    retro_seconds_color?: string;
    retro_separator_color?: string;
    retro_ampm_color?: string;
    text_orientation?: 'horizontal' | 'vertical';
    text_word_gap?: number;
    text_prefix_color?: string;
    text_prefix_size?: number;
    text_hours_color?: string;
    text_hours_size?: number;
    text_minutes_color?: string;
    text_minutes_size?: number;
    text_ampm_color?: string;
    text_ampm_size?: number;
    neon_padding?: number;
    neon_hours_color?: string;
    neon_minutes_color?: string;
    neon_seconds_color?: string;
    neon_separator_color?: string;
    neon_ampm_color?: string;
    material_vertical_gap?: number;
    material_background_color?: string;
    material_hours_color?: string;
    material_minutes_color?: string;
    material_seconds_color?: string;
    material_separator_color?: string;
    material_ampm_color?: string;
    terminal_background_color?: string;
    terminal_line1_color?: string;
    terminal_line2_color?: string;
    terminal_cursor_color?: string;
    terminal_hours_color?: string;
    terminal_minutes_color?: string;
    terminal_seconds_color?: string;
    terminal_separator_color?: string;
    terminal_ampm_color?: string;
    terminal_vertical_spacing?: number;
    terminal_line1_size?: number;
    terminal_line2_size?: number;
    terminal_output_size?: number;
    tap_action?: ModuleActionConfig;
    hold_action?: ModuleActionConfig;
    double_tap_action?: ModuleActionConfig;
}
export interface AnimatedWeatherModule extends BaseModule {
    type: 'animated_weather';
    weather_entity?: string;
    temperature_entity?: string;
    condition_entity?: string;
    custom_entity?: string;
    custom_entity_name?: string;
    show_left_column?: boolean;
    show_center_column?: boolean;
    show_right_column?: boolean;
    column_gap?: number;
    left_column_gap?: number;
    right_column_gap?: number;
    temperature_unit?: 'F' | 'C';
    location_override_mode?: 'text' | 'entity';
    location_name?: string;
    location_entity?: string;
    show_location?: boolean;
    show_condition?: boolean;
    show_custom_entity?: boolean;
    show_date?: boolean;
    show_temperature?: boolean;
    show_temp_range?: boolean;
    location_size?: number;
    condition_size?: number;
    custom_entity_size?: number;
    location_color?: string;
    condition_color?: string;
    custom_entity_color?: string;
    main_icon_size?: number;
    icon_style?: 'fill' | 'line';
    date_size?: number;
    temperature_size?: number;
    temp_range_size?: number;
    date_color?: string;
    temperature_color?: string;
    temp_range_color?: string;
    module_background?: string;
    module_border?: string;
    tap_action?: ModuleActionConfig;
    hold_action?: ModuleActionConfig;
    double_tap_action?: ModuleActionConfig;
}
export interface AnimatedForecastModule extends BaseModule {
    type: 'animated_forecast';
    weather_entity?: string;
    forecast_entity?: string;
    forecast_days?: number;
    temperature_unit?: 'F' | 'C';
    forecast_day_size?: number;
    forecast_temp_size?: number;
    forecast_icon_size?: number;
    icon_style?: 'fill' | 'line';
    text_color?: string;
    accent_color?: string;
    forecast_day_color?: string;
    forecast_temp_color?: string;
    forecast_background?: string;
    tap_action?: ModuleActionConfig;
    hold_action?: ModuleActionConfig;
    double_tap_action?: ModuleActionConfig;
}
export interface DropdownOption {
    id: string;
    label: string;
    icon?: string;
    icon_color?: string;
    use_state_color?: boolean;
    action: {
        action: 'more-info' | 'toggle' | 'navigate' | 'url' | 'perform-action' | 'assist' | 'nothing';
        entity?: string;
        navigation_path?: string;
        url_path?: string;
        service?: string;
        perform_action?: string;
        service_data?: Record<string, any>;
        data?: Record<string, any>;
        target?: {
            entity_id?: string | string[];
            device_id?: string | string[];
            area_id?: string | string[];
        };
    };
}
export interface ExternalCardModule extends BaseModule {
    type: 'external_card';
    card_type: string;
    card_config: Record<string, any>;
}
export type CardModule = TextModule | SeparatorModule | ImageModule | InfoModule | BarModule | GaugeModule | IconModule | HorizontalModule | VerticalModule | SliderModule | PageBreakModule | ButtonModule | SpinboxModule | MarkdownModule | CameraModule | GraphsModule | DropdownModule | LightModule | AnimatedClockModule | AnimatedWeatherModule | AnimatedForecastModule | ExternalCardModule;
export interface HoverEffectConfig {
    effect?: 'none' | 'highlight' | 'outline' | 'grow' | 'shrink' | 'pulse' | 'bounce' | 'float' | 'glow' | 'shadow' | 'rotate' | 'skew' | 'wobble' | 'buzz' | 'fade';
    duration?: number;
    timing?: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear';
    delay?: number;
    highlight_color?: string;
    outline_color?: string;
    outline_width?: number;
    glow_color?: string;
    shadow_color?: string;
    scale?: number;
    translate_x?: number;
    translate_y?: number;
    rotate_degrees?: number;
    intensity?: 'subtle' | 'normal' | 'strong';
}
export interface SharedDesignProperties {
    color?: string;
    text_align?: 'left' | 'center' | 'right' | 'justify';
    font_size?: string;
    line_height?: string;
    letter_spacing?: string;
    font_family?: string;
    font_weight?: string;
    text_transform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize';
    font_style?: 'normal' | 'italic' | 'oblique';
    background_color?: string;
    background_image?: string;
    background_repeat?: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';
    background_position?: 'left top' | 'left center' | 'left bottom' | 'center top' | 'center center' | 'center bottom' | 'right top' | 'right center' | 'right bottom';
    background_size?: 'cover' | 'contain' | 'auto' | string;
    backdrop_filter?: string;
    background_filter?: string;
    width?: string;
    height?: string;
    max_width?: string;
    max_height?: string;
    min_width?: string;
    min_height?: string;
    margin_top?: string;
    margin_bottom?: string;
    margin_left?: string;
    margin_right?: string;
    padding_top?: string;
    padding_bottom?: string;
    padding_left?: string;
    padding_right?: string;
    border_radius?: string;
    border_style?: 'none' | 'solid' | 'dashed' | 'dotted' | 'double';
    border_width?: string;
    border_color?: string;
    position?: 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky';
    top?: string;
    bottom?: string;
    left?: string;
    right?: string;
    z_index?: string;
    text_shadow_h?: string;
    text_shadow_v?: string;
    text_shadow_blur?: string;
    text_shadow_color?: string;
    box_shadow_h?: string;
    box_shadow_v?: string;
    box_shadow_blur?: string;
    box_shadow_spread?: string;
    box_shadow_color?: string;
    overflow?: 'visible' | 'hidden' | 'scroll' | 'auto';
    clip_path?: string;
    animation_type?: 'none' | 'pulse' | 'vibrate' | 'rotate-left' | 'rotate-right' | 'hover' | 'fade' | 'scale' | 'bounce' | 'shake' | 'tada';
    animation_entity?: string;
    animation_trigger_type?: 'state' | 'attribute';
    animation_attribute?: string;
    animation_state?: string;
    intro_animation?: 'none' | 'fadeIn' | 'slideInUp' | 'slideInDown' | 'slideInLeft' | 'slideInRight' | 'zoomIn' | 'bounceIn' | 'flipInX' | 'flipInY' | 'rotateIn';
    outro_animation?: 'none' | 'fadeOut' | 'slideOutUp' | 'slideOutDown' | 'slideOutLeft' | 'slideOutRight' | 'zoomOut' | 'bounceOut' | 'flipOutX' | 'flipOutY' | 'rotateOut';
    animation_duration?: string;
    animation_delay?: string;
    animation_timing?: 'ease' | 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'cubic-bezier(0.25,0.1,0.25,1)';
    hover_effect?: HoverEffectConfig;
    logic_entity?: string;
    logic_attribute?: string;
    logic_operator?: '=' | '!=' | '>' | '>=' | '<' | '<=' | 'contains' | 'not_contains' | 'has_value' | 'no_value';
    logic_value?: string;
}
export interface CardColumn {
    id: string;
    name?: string;
    modules: CardModule[];
    vertical_alignment?: 'top' | 'center' | 'bottom' | 'stretch';
    horizontal_alignment?: 'left' | 'center' | 'right' | 'stretch';
    background_color?: string;
    padding?: number;
    margin?: number;
    border_radius?: number;
    border_color?: string;
    border_width?: number;
    display_mode?: 'always' | 'every' | 'any';
    display_conditions?: DisplayCondition[];
    template_mode?: boolean;
    template?: string;
    design?: SharedDesignProperties;
}
export interface CardRow {
    id: string;
    name?: string;
    columns: CardColumn[];
    column_layout?: '1-col' | '1-2-1-2' | '1-3-2-3' | '2-3-1-3' | '2-5-3-5' | '3-5-2-5' | '1-3-1-3-1-3' | '1-4-1-2-1-4' | '1-5-3-5-1-5' | '1-6-2-3-1-6' | '1-4-1-4-1-4-1-4' | '1-5-1-5-1-5-1-5' | '1-6-1-6-1-6-1-6' | '1-8-1-4-1-4-1-8' | '1-5-1-5-1-5-1-5-1-5' | '1-6-1-6-1-3-1-6-1-6' | '1-8-1-4-1-4-1-4-1-8' | '1-6-1-6-1-6-1-6-1-6-1-6' | '50-50' | '30-70' | '70-30' | '40-60' | '60-40' | '33-33-33' | '25-50-25' | '20-60-20' | '25-25-25-25';
    gap?: number;
    column_alignment?: 'top' | 'middle' | 'bottom';
    content_alignment?: 'start' | 'end' | 'center' | 'stretch';
    background_color?: string;
    padding?: number;
    margin?: number;
    border_radius?: number;
    border_color?: string;
    border_width?: number;
    display_mode?: 'always' | 'every' | 'any';
    display_conditions?: DisplayCondition[];
    template_mode?: boolean;
    template?: string;
    design?: SharedDesignProperties;
}
export interface LayoutConfig {
    rows: CardRow[];
    gap?: number;
}
export interface FavoriteColor {
    id: string;
    name: string;
    color: string;
    order: number;
}
export interface PresetDefinition {
    id: string;
    name: string;
    description: string;
    category: 'badges' | 'layouts' | 'widgets' | 'custom';
    icon: string;
    author: string;
    version: string;
    tags: string[];
    integrations?: string[];
    thumbnail?: string;
    layout: LayoutConfig;
    metadata: {
        created: string;
        updated: string;
        downloads?: number;
        rating?: number;
    };
}
export interface FavoriteRow {
    id: string;
    name: string;
    description?: string;
    row: CardRow;
    created: string;
    tags: string[];
}
export interface ExportData {
    type: 'ultra-card-row' | 'ultra-card-layout' | 'ultra-card-module';
    version: string;
    data: CardRow | LayoutConfig | CardModule;
    metadata: {
        exported: string;
        name?: string;
        description?: string;
        privacyProtected?: boolean;
    };
}
export interface UltraCardConfig {
    type: string;
    layout: LayoutConfig;
    global_css?: string;
    card_background?: string;
    card_border_radius?: number;
    card_border_color?: string;
    card_border_width?: number;
    card_padding?: number;
    card_margin?: number;
    card_shadow_enabled?: boolean;
    card_shadow_color?: string;
    card_shadow_horizontal?: number;
    card_shadow_vertical?: number;
    card_shadow_blur?: number;
    card_shadow_spread?: number;
    card_background_image_type?: 'none' | 'upload' | 'entity' | 'url';
    card_background_image?: string;
    card_background_image_entity?: string;
    card_background_size?: string;
    card_background_repeat?: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';
    card_background_position?: string;
    display_mode?: 'always' | 'every' | 'any';
    display_conditions?: DisplayCondition[];
    favorite_colors?: FavoriteColor[];
    haptic_feedback?: boolean;
    card_name?: string;
    responsive_scaling?: boolean;
}
export interface CustomCard {
    type: string;
    name: string;
    description: string;
    preview?: boolean;
    documentationURL?: string;
    version?: string;
}
export interface LovelaceCard {
    hass?: HomeAssistant;
    config?: UltraCardConfig;
    requestUpdate?: () => void;
}
export interface ConfigChangedEvent {
    detail: {
        config: UltraCardConfig;
    };
}
export interface EditorTarget extends EventTarget {
    value?: string | number | boolean;
    checked?: boolean;
    configValue?: string;
    configAttribute?: string;
}
