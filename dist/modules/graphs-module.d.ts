import { TemplateResult } from 'lit';
import { HomeAssistant } from 'custom-card-helpers';
import { BaseUltraModule, ModuleMetadata } from './base-module';
import { CardModule, GraphsModule, UltraCardConfig } from '../types';
import '../entity-picker';
import '../components/ultra-color-picker';
export declare class UltraGraphsModule extends BaseUltraModule {
    metadata: ModuleMetadata;
    private _templateService?;
    private _updateInterval;
    private _historyData;
    private _historyError;
    private _historyLoading;
    private _deferredHistoryScheduled;
    private _getCacheStore;
    private _persistCacheStore;
    private _makeCacheKey;
    private _tryReadCache;
    private _writeCache;
    private clickTimeout;
    private holdTimeout;
    private isHolding;
    private expandedEntities;
    createDefault(id?: string, hass?: HomeAssistant): GraphsModule;
    private getChartTypeOptions;
    private getTimePeriodOptions;
    private getAggregationOptions;
    private getLegendPositionOptions;
    renderGeneralTab(module: CardModule, hass: HomeAssistant, config: UltraCardConfig, updateModule: (updates: Partial<CardModule>) => void): TemplateResult;
    renderActionsTab(module: CardModule, hass: HomeAssistant, config: UltraCardConfig, updateModule: (updates: Partial<CardModule>) => void): TemplateResult;
    renderOtherTab(module: CardModule, hass: HomeAssistant, config: UltraCardConfig, updateModule: (updates: Partial<CardModule>) => void): TemplateResult;
    renderPreview(module: CardModule, hass: HomeAssistant): TemplateResult;
    private _prepareSimpleChartData;
    private _formatColor;
    private _renderSimpleChart;
    private _renderPieChart;
    private _renderLineChart;
    private _renderLegend;
    private _colorWithAlpha;
    private _renderBarChart;
    private _showTooltip;
    private _hideTooltip;
    private _generateTimePoints;
    private _generateTimeSeriesData;
    private _hashString;
    private _triggerHistoryLoad;
    private _loadHistoryData;
    private _tryFastHistoryPath;
    private _fetchHistoryDataAsync;
    private _processHistoryData;
    private _coerceNumber;
    private _getDefaultColor;
    private _addEntity;
    private _removeEntity;
    private _updateEntity;
    private _toggleEntityOptions;
    private _getEntityAttributes;
    private _renderSizeControl;
    private hasActiveLink;
    private handleClick;
    private handleDoubleClick;
    private handleMouseDown;
    private handleMouseUp;
    private handleMouseLeave;
    private handleTouchStart;
    private handleTouchEnd;
    private handleTapAction;
    private handleHoldAction;
    private handleDoubleAction;
    private styleObjectToCss;
    private _resolveChartWidth;
    private camelToKebab;
    private addPixelUnit;
    private getPaddingCSS;
    private getMarginCSS;
    private getBackgroundCSS;
    private getBackgroundImageCSS;
    private getBorderCSS;
    renderLogicTab(module: CardModule, hass: HomeAssistant, config: UltraCardConfig, updateModule: (updates: Partial<CardModule>) => void): TemplateResult;
    validate(module: CardModule): {
        valid: boolean;
        errors: string[];
    };
    getStyles(): string;
    cleanup(): void;
    requestUpdate(): void;
}
